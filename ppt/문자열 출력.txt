//문자열 길이 맞춰서 줄바꾸기
void print_change_row(char* sentence)
{

	count_change_row = 2;
	char print_sentence[1024] = { NULL };
	int widlen = 50;
	char temp1[1024] = { NULL };
	char temp2[1024] = { NULL };
	int firstcount = 1;
	strcpy(print_sentence, sentence);
	while (strlen(print_sentence) > widlen)
	{
		int nextrow = widlen;
		int min_nextrow = widlen;
		int lengthname = strlen(print_sentence);
		//내용이 지정한 길이보다 길때 자를 위치 지정
		if (lengthname >= widlen)
		{
			for (int i = widlen; print_sentence[i] != ' '; i++)
				nextrow = i+1;
			for (int i = widlen; print_sentence[i] != ' '; i--)
				min_nextrow = i-1;
		}
		//자를위치가 내용의 길이와 같거나 길때 내용 그대로 출력하기 위해 반복문 종료
		if (nextrow - widlen > widlen - min_nextrow)
			nextrow = min_nextrow;
		if (nextrow >= lengthname)
			break;
		int dellen = sizeof(temp1);
		for (int j = 0; j < dellen; j++)	//temp1의 내용 지우기
			temp1[j] = NULL;
		strncpy(temp1, print_sentence, nextrow);		//temp1에 name 내용 복사하기
		int k = 0;
		if (print_sentence[nextrow] == ' ')
			nextrow++;
		//temp2에다가 temp1의 내용을 집어놓고 남은 나머지의 내용 복사하기
		for (int j = nextrow; print_sentence[j] != NULL; j++)
		{
			temp2[k] = print_sentence[j];
			k++;
		}
		for (int j = 0; j < lengthname; j++)	//name에 있는 데이터 지우기
			print_sentence[j] = NULL;
		strcpy(print_sentence, temp2);					//temp2의 내용을 name으로 옮기기
		if (check_subjective && firstcount)
			printf("\n\n\n\t Q.");
		if (firstcount)
			printf("  %s\n", temp1);					//temp1의 내용 출력
		else
			printf("\t     %s\n", temp1);

		dellen = sizeof(temp2);
		for (int j = 0; j < dellen; j++)		//다음에 받을 데이터를 위해 temp2의 내용 지우기
			temp2[j] = NULL;
		if (firstcount)
		{
			widlen -= 6;
			firstcount = 0;
		}
		nextrow = widlen;
		lengthname = 0;
		dellen = 0;
		count_change_row++;
	}
	if (check_subjective&&firstcount)
		printf("\t   ");
	if (firstcount)
		printf("  %s\n", print_sentence);
	else
		printf("\t     %s\n", print_sentence);
}                                 