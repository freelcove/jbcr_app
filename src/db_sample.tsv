1	User Interface 설계 시 오류 메시지나 경고에 관한 지침으로 가장 거리가 먼 것은?	메시지는 이해하기 쉬워야 한다.	오류로부터 회복을 위한 구체적인 설명이 제공되어야 한다.	오류로 인해 발생 될 수 있는 부정적인 내용을 적극적으로 사용자들에게 알려야 한다.	소리나 색의 사용을 줄이고 텍스트로만 전달하도록 한다.	4	2022년/1회
2	다음 중 애자일(Agile) 소프트웨어 개발에 대한 설명으로 틀린 것은?	공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.	동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.	계약 협상보다는 고객과의 협력을 가치 있게 여긴다.	계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다.	2	2022년/1회
3	소프트웨어 설계에서 요구사항 분석에 대한 설명으로 틀린 것은?	소프트웨어가 무엇을 해야하는가를 추적하여 요구사항 명세를 작성하는 작업이다.	사용자의 요구를 추출하여 목표를 정하고 어떤 방식으로 해결할 것인지 결정하는 단계이다.	소프트웨어 시스템이 사용되는 동안 발견되는 오류를 정리하는 단계이다.	소프트웨어 개발의 출발점이면서 실질적인 첫 번째 단계이다.	3	2022년/1회
4	객체지향 기법에서 상위 클래스의 메소드와 속성을 하위 클래스가 물려받는 것을 의미하는 것은?	Abstraction	Polymorphism	Encapsulation	Inheritance	4	2022년/1회
5	설계 기법 중 하향식 설계 방법과 상향식 설계 방법에 대한 비교 설명으로 가장 옳지 않은 것은?	하향식 설계에서는 통합 검사 시 인터페이스가 이미 정의되어 있어 통합이 간단하다.	하향식 설계에서 레벨이 낮은 데이터 구조의 세부 사항은 설계초기 단계에서 필요하다.	상향식 설계는 최하위 수준에서 각각의 모듈들을 설계하고 이러한 모듈이 완성되면 이들을 결합하여 검사한다.	상향식 설계에서는 인터페이스가 이미 성립되어 있지 않더라도 기능 추가가 쉽다.	4	2022년/1회
6	자료흐름도(DFD)의 각 요소별 표기 형태의 연결이 옳지 않은 것은?	Process : 원	Data Flow : 화살표	Data Store : 삼각형	Terminator : 사각형	3	2022년/1회
7	소프트웨어 개발에 이용되는 모델(Model)에 대한 설명 중 거리가 먼 것은?	모델은 개발 대상을 추상화하고 기호나 그림 등으로 시각적으로 표현한다.	모델을 통해 소프트웨어에 대한 이해도를 향상시킬 수 있다.	모델을 통해 이해 당사자 간의 의사소통이 향상된다.	모델을 통해 향후 개발될 시스템의 유추는 불가능하다.	4	2022년/1회
8	다음의 설명에 해당하는 언어는? "객체 지향 시스템을 개발할 때 산출물을 명세화, 시각화, 문서화하는데 사용된다. 즉, 개발하는 시스템을 이해하기 쉬운 형태로 표현하여 분석가, 의뢰인, 설계자가 효율적인 의사소통을 할 수 있게 해준다. 따라서, 개발 방법론이나 개발 프로세스가 아니라 표준화된 모델링 언어이다."	JAVA	C	UML	Python	3	2022년/1회
9	다음 내용이 설명하는 UI설계 도구는? "- 디자인, 사용방법설명, 평가 등을 위해 실제 화면과 유사하게 만든 정적인 형태의 모형 - 시각적으로만 구성 요소를 배치하는 것으로 일반적으로 실제로 구현되지는 않음	스토리보드(Storyboard)	목업(Mockup)	프로토타입(Prototype)	유스케이스(Usecase)	2	2022년/1회
10	애자일(Agile) 기법 중 스크럼(Scrum)과 관련된 용어에 대한 설명이 틀린 것은?	스크럼 마스터(Scrum Master)는 스크럼 프로세스를 따르고, 팀이 스크럼을 효과적으로 활용할 수 있도록 보장하는 역할 등을 맡는다.	제품 백로그(Product Backlog)는 스크럼 팀이 해결해야 하는 목록으로 소프트웨어 요구사항, 아키텍처 정의 등이 포함될 수 있다.	스프린트(Sprint)는 하나의 완성된 최종 결과물을 만들기 위한 주기로 3달 이상의 장기간으로 결정된다.	속도(Velocity)는 한 번의 스프린트에서 한 팀이 어느 정도의 제품 백로그를 감당할 수 있는지에 대한 추정치로 볼 수 있다.	3	2022년/1회
11	요구사항 검증(Requirements Validation)과 관련한 설명으로 틀린 것은?	요구사항이 고객이 정말 원하는 시스템을 제대로 정의하고 있는지 점검하는 과정이다.	개발완료 이후에 문제점이 발견될 경우 막대한 재작업 비용이 들 수 있기 때문에 요구사항 검증은 매우 중요하다.	요구사항이 실제 요구를 반영하는지, 문서상의 요구사항은 서로 상충되지 않는지 등을 점검한다.	요구사항 검증 과정을 통해 모든 요구사항 문제를 발견할수 있다.	4	2021년/3회
12	UML 모델에서 한 사물의 명세가 바뀌면 다른사물에 영향을 주며, 일반적으로 한 클래스가다른 클래스를 오퍼레이션의 매개변수로 사용하는 경우에 나타나는 관계는?	Association	Dependency	Realization	Generalization	2	2021년/3회
13	익스트림 프로그래밍 (XP)에 대한 설명으로 틀린 것은?	빠른 개발을 위해 테스트를 수행하지 않는다.	사용자의 요구사항은 언제든지 변할 수있다.	고객과 직접 대면하며 요구사항을 이야기하기 위해 사용자 스토리(User Story)를 활용할 수 있다.	기존의 방법론에 비해 실용성(Pragmatism)을 강조한 것이라고 볼 수있다.	1	2021년/3회
14	소프트웨어 설계에서 사용되는 대표적인 추상화(Abstraction) 기법이 아닌 것은?	자료 추상화	제어 추상화	과정 추상화	강도 추상화	4	2021년/3회
15	객체지향 설계에서 정보 은닉(Information Hiding)과 관련한설명으로 틀린 것은?	필요하지 않은 정보는 접근할 수 없도록 하여 한 모듈 또는 하부시스템이 다른 모듈의 구현에 영향을 받지 않게 설계되는것을 의미한다.	모듈들 사이의 독립성을 유지시키는 데 도움이 된다.	설계에서 은닉되어야 할 기본 정보로는 IP주소와 같은 물리적 코드, 상세 데이터 구조 등이 있다.	모듈 내부의 자료 구조와 접근 동작들에만 수정을 국한하기 때문에 요구사항 등변화에 따른 수정이 불가능하다.	4	2021년/3회
16	소프트웨어 공학에서 모델링 (Modeling)과 관련한 설명으로 틀린 것은?	개발팀이 응용문제를 이해하는 데 도움을 줄 수 있다.	유지보수 단계에서만 모델링 기법을 활용한다.	개발될 시스템에 대하여 여러 분야의 엔지니어들이 공통된 개념을 공유하는 데 도움을 준다.	절차적인 프로그램을 위한 자료흐름도는 프로세스 위주의 모델링 방법이다.	2	2021년/3회
17	요구 분석(Requirement Analysis)에 대한 설명으로 틀린 것은?	요구 분석은 소프트웨어 개발의 실제적인 첫 단계로 사용자의 요구에 대해 이해하는 단계라 할 수 있다.	요구 추출(Requirement Elicitation)은 프로젝트 계획 단계에 정의한 문제의 범위 안에 있는 사용자의 요구를 찾는 단계이다.	도메인 분석(Domain Analysis)은 요구에 대한 정보를 수집하고 배경을 분석하여 이를 토대로 모델링을 하게 된다.	기능적(Functional) 요구에서 시스템 구축에대한 성능, 보안, 품질, 안정 등에 대한 요구사항을 도출한다.	4	2021년/3회
18	분산 시스템을 위한 마스터-슬레이브(Master-Slave) 아키텍처에 대한 설명으로 틀린 것은?	일반적으로 실시간 시스템에서 사용된다.	마스터 프로세스는 일반적으로 연산, 통신, 조정을 책임진다.	슬레이브 프로세스는 데이터 수집 기능을 수행할 수 없다.	마스터 프로세스는 슬레이브 프로세스들을 제어할 수 있다.	3	2021년/3회
19	요구 사항 정의 및 분석·설계의 결과물을 표현하기 위한 모델링 과정에서 사용되는 다이어그램(Diagram)이 아닌 것은?	Data Flow Diagram	UML Diagram	E-R Diagram	AVL Diagram	4	2021년/3회
20	객체지향의 주요 개념에 대한 설명으로 틀린 것은?	캡슐화는 상위클래스에서 속성이나 연산을 전달받아 새로운 형태의 클래스로 확장하여 사용하는 것을 의미한다.	객체는 실세계에 존재하거나 생각할 수 있는 것을 말한다.	클래스는 하나 이상의 유사한 객체들을 묶어 공통된 특성을 표현한 것이다.	다형성은 상속받은 여러 개의 하위 객체들이 다른 형태의 특성을 갖는 객체로 이용될 수 있는 성질이다.	1	2021년/3회
21	사용자 인터페이스(User Interface)에 대한 설명으로 틀린 것은?	사용자와 시스템이 정보를 주고받는 상호작용이 잘 이루어지도록 하는 장치나 소프트웨어를 의미한다.	편리한 유지보수를 위해 개발자 중심으로 설계되어야 한다.	배우기가 용이하고 쉽게 사용할 수 있도록 만들어져야 한다.	사용자 요구사항이 UI에 반영될 수 있도록 구성해야 한다.	2	2021년/3회
22	GoF(Gang of Four) 디자인 패턴과 관련한 설명으로 틀린 것은?	디자인 패턴을 목적(Purpose)으로 분류할 때 생성, 구조, 행위로 분류할 수 있다.	Strategy 패턴은 대표적인 구조 패턴으로 인스턴스를 복제하여 사용하는 구조를 말한다.	행위 패턴은 클래스나 객체들이 상호작용하는 방법과 책임을 분산하는 방법을 정의한다.	Singleton 패턴은 특정 클래스의 인스턴스가 오직 하나임을 보장하고, 이 인스턴스에 대한 접근 방법을 제공한다.	2	2021년/3회
23	애자일 개발 방법론과 관련한 설명으로 틀린 것은?	빠른 릴리즈를 통해 문제점을 빠르게 파악할 수 있다.	정확한 결과 도출을 위해 계획 수립과 문서화에 중점을 둔다.	고객과의 의사소통을 중요하게 생각한다.	진화하는 요구사항을 수용하는데 적합하다.	2	2021년/3회
24	럼바우(Rumbaugh)의 객체지향 분석 기법 중 자료 흐름도(DFD)를 주로 이용하는 것은?	기능 모델링	동적 모델링	객체 모델링	정적 모델링	1	2021년/3회
25	순차 다이어그램(Sequence Diagram)과 관련한 설명으로 틀린 것은?	객체들의 상호 작용을 나타내기 위해 사용한다.	시간의 흐름에 따라 객체들이 주고 받는 메시지의 전달 과정을 강조한다.	동적 다이어그램보다는 정적 다이어그램에 가깝다.	교류 다이어그램(Interaction Diagram)의 한 종류로 볼 수 있다.	3	2021년/3회
26	객체지향 분석 기법과 관련한 설명으로 틀린것은?	동적 모델링 기법이 사용될 수 있다.	기능 중심으로 시스템을 파악하며 순차적인처리가 중요시되는 하향식(Top-down)방식으로 볼 수 있다.	데이터와 행위를 하나로 묶어 객체를 정의내리고 추상화시키는 작업이라 할 수 있다.	코드 재사용에 의한 프로그램 생산성 향상 및 요구에 따른 시스템의 쉬운 변경이 가능하다.	2	2021년/3회
27	대표적으로 DOS 및 Unix 등의 운영체제에서조작을 위해 사용하던 것으로, 정해진 명령문자열을 입력하여 시스템을 조작하는 사용자인터페이스(User Interface)는?	GUI(Graphical User Interface)	CLI(Command Line Interface)	CUI(Cell User Interface)	MUI(Mobile User Interface)	2	2021년/3회
28	분산 시스템에서의 미들웨어 (Middleware)와 관련한 설명으로 틀린 것은?	분산 시스템에서 다양한 부분을 관리하고 통신하며 데이터를 교환하게 해주는 소프트웨어로 볼 수 있다.	위치 투명성(Location Transparency)을 제공한다.	분산 시스템의 여러 컴포넌트가 요구하는 재사용가능한 서비스의 구현을 제공한다.	애플리케이션과 사용자 사이에서만 분산서비스를 제공한다.	4	2021년/3회
29	소프트웨어 아키텍처와 관련한 설명으로 틀린것은?	파이프 필터 아키텍처에서 데이터는 파이프를 통해 양방향으로 흐르며, 필터 이동 시 오버헤드가 발생하지 않는다.	외부에서 인식할 수 있는 특성이 담긴 소프트웨어의 골격이 되는 기본 구조로 볼수 있다.	데이터 중심 아키텍처는 공유 데이터저장소를 통해 접근자 간의 통신이 이루어지므로 각 접근자의 수정과 확장이 용이하다.	이해 관계자들의 품질 요구사항을 반영하여 품질 속성을 결정한다.	1	2021년/3회