1	User Interface 설계 시 오류 메시지나 경고에 관한 지침으로 가장 거리가 먼 것은?	메시지는 이해하기 쉬워야 한다.	오류로부터 회복을 위한 구체적인 설명이 제공되어야 한다.	오류로 인해 발생 될 수 있는 부정적인 내용을 적극적으로 사용자들에게 알려야 한다.	소리나 색의 사용을 줄이고 텍스트로만 전달하도록 한다.	4	2022년/1회
2	다음 중 애자일(Agile) 소프트웨어 개발에 대한 설명으로 틀린 것은?	공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.	동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.	계약 협상보다는 고객과의 협력을 가치 있게 여긴다.	계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다.	2	2022년/1회
3	소프트웨어 설계에서 요구사항 분석에 대한 설명으로 틀린 것은?	소프트웨어가 무엇을 해야하는가를 추적하여 요구사항 명세를 작성하는 작업이다.	사용자의 요구를 추출하여 목표를 정하고 어떤 방식으로 해결할 것인지 결정하는 단계이다.	소프트웨어 시스템이 사용되는 동안 발견되는 오류를 정리하는 단계이다.	소프트웨어 개발의 출발점이면서 실질적인 첫 번째 단계이다.	3	2022년/1회
4	객체지향 기법에서 상위 클래스의 메소드와 속성을 하위 클래스가 물려받는 것을 의미하는 것은?	Abstraction	Polymorphism	Encapsulation	Inheritance	4	2022년/1회
5	설계 기법 중 하향식 설계 방법과 상향식 설계 방법에 대한 비교 설명으로 가장 옳지 않은 것은?	하향식 설계에서는 통합 검사 시 인터페이스가 이미 정의되어 있어 통합이 간단하다.	하향식 설계에서 레벨이 낮은 데이터 구조의 세부 사항은 설계초기 단계에서 필요하다.	상향식 설계는 최하위 수준에서 각각의 모듈들을 설계하고 이러한 모듈이 완성되면 이들을 결합하여 검사한다.	상향식 설계에서는 인터페이스가 이미 성립되어 있지 않더라도 기능 추가가 쉽다.	4	2022년/1회
6	자료흐름도(DFD)의 각 요소별 표기 형태의 연결이 옳지 않은 것은?	Process : 원	Data Flow : 화살표	Data Store : 삼각형	Terminator : 사각형	3	2022년/1회
7	소프트웨어 개발에 이용되는 모델(Model)에 대한 설명 중 거리가 먼 것은?	모델은 개발 대상을 추상화하고 기호나 그림 등으로 시각적으로 표현한다.	모델을 통해 소프트웨어에 대한 이해도를 향상시킬 수 있다.	모델을 통해 이해 당사자 간의 의사소통이 향상된다.	모델을 통해 향후 개발될 시스템의 유추는 불가능하다.	4	2022년/1회
8	다음의 설명에 해당하는 언어는? "객체 지향 시스템을 개발할 때 산출물을 명세화, 시각화, 문서화하는데 사용된다. 즉, 개발하는 시스템을 이해하기 쉬운 형태로 표현하여 분석가, 의뢰인, 설계자가 효율적인 의사소통을 할 수 있게 해준다. 따라서, 개발 방법론이나 개발 프로세스가 아니라 표준화된 모델링 언어이다."	JAVA	C	UML	Python	3	2022년/1회
9	다음 내용이 설명하는 UI설계 도구는? "- 디자인, 사용방법설명, 평가 등을 위해 실제 화면과 유사하게 만든 정적인 형태의 모형 - 시각적으로만 구성 요소를 배치하는 것으로 일반적으로 실제로 구현되지는 않음	스토리보드(Storyboard)	목업(Mockup)	프로토타입(Prototype)	유스케이스(Usecase)	2	2022년/1회
10	애자일(Agile) 기법 중 스크럼(Scrum)과 관련된 용어에 대한 설명이 틀린 것은?	스크럼 마스터(Scrum Master)는 스크럼 프로세스를 따르고, 팀이 스크럼을 효과적으로 활용할 수 있도록 보장하는 역할 등을 맡는다.	제품 백로그(Product Backlog)는 스크럼 팀이 해결해야 하는 목록으로 소프트웨어 요구사항, 아키텍처 정의 등이 포함될 수 있다.	스프린트(Sprint)는 하나의 완성된 최종 결과물을 만들기 위한 주기로 3달 이상의 장기간으로 결정된다.	속도(Velocity)는 한 번의 스프린트에서 한 팀이 어느 정도의 제품 백로그를 감당할 수 있는지에 대한 추정치로 볼 수 있다.	3	2022년/1회
